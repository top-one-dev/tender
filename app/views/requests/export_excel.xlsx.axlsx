wb = xlsx_package.workbook

wb.styles do |s|
	gray_cell = s.add_style  :bg_color => "DFDFDF", :b => true, :alignment => { :vertical => :center, :wrap_text => true }, :locked => true 
	dark_cell = s.add_style  :bg_color => "AAAAAA", :b => true, :alignment => { :horizontal=> :center, :vertical => :center, :wrap_text => true }, :locked => true
	script    = s.add_style  :fg_color => "686868", :i => true, :alignment => { :horizontal=> :center, :vertical => :center, :wrap_text => true }, :locked => true
	bidder 	  = s.add_style  :b => true, :alignment => { :horizontal=> :center, :vertical => :center, :wrap_text => true }, :locked => true
	percent   = s.add_style  :fg_color => "218100", :bg_color => "AAAAAA", :format_code => "0.00%", :alignment => { :horizontal=> :center, :vertical => :center, :wrap_text => true }, :locked => true
	default   = s.add_style  :alignment => { :horizontal=> :center, :vertical => :center, :wrap_text => true }, :locked => false
	
	wb.add_worksheet(name: "Compare financial bids") do |sheet|

	  # Sheet protection
	  sheet.sheet_protection do |protection|
	  	protection.password = 'coolplum'
	  end

	  # Request Details 
	  (0..2).each do |i|
	  	sheet.merge_cells Axlsx::cell_r(0, i) + ':' + Axlsx::cell_r(1, i)
	  end
	   
	  sheet.add_row [ " Buyer: #{@request.user.name}, #{@request.company.name}" ], :height => 30
	  sheet.add_row [ " Request: ##{@request.id} #{@request.name}" ], :height => 30
	  sheet.add_row [ " Bid due date: #{@request.end_time.strftime("%b %d, %Y %H:%M ( %Z%z )")}" ], :height => 30
	  
	  rows 	  = []
	  rows[0] = ['', '', '', 'Bidder']
	  rows[1] = ['', '', '', 'Bidder comments']
	  rows[2] = ['', '', '', '']
	  rows[3] = ['Item', 'Description', 'Quantity', 'Unit']
	  
	  # Bidder, Comments, Origianl/Alternative, Items,
	  @bids.each do |supplier, bids|
	  	
	  	start_point = rows[0].count
	  	end_point 	= rows[0].count + 2*bids.count - 1
	  	sheet.merge_cells Axlsx::cell_r(start_point, 3) + ':' + Axlsx::cell_r(end_point, 3)

	  	bids.each_with_index do |bid, index|
		  	sheet.merge_cells Axlsx::cell_r(rows[1].count, 4) + ':' + Axlsx::cell_r(rows[1].count + 1, 4)
		  	sheet.merge_cells Axlsx::cell_r(rows[2].count, 5) + ':' + Axlsx::cell_r(rows[2].count + 1, 5)

	  		rows[0] << "#{bid.supplier.company.name} - #{bid.supplier.correct_user.name} (#{bid.supplier.email})"
	  		rows[0] << ''
	  		rows[1] << bid.content
	  		rows[1] << ''
	  		rows[3] << 'Unit Price'
	  		rows[3] << 'Item Total'
	  		if index == 0
	  			rows[2] << 'Original'
	  			rows[2] << ''
	  		else
	  			rows[2] << "Alternative bid#{index}"
	  			rows[2] << ''
	  		end
	  	end	  	
	  end

	  # Items and Item answers
	  @request.items.each_with_index do |item, index|
	  	rows[4+index] = [ item.name, item.description, item.quantity, item.unit ]
	  	@bids.each do |supplier, bids|
		  	bids.each_with_index do |bid, i|
		  		rows[4+index] << Money.new(bid.ianswers[index].unit_price*100, bid.bid_currency).exchange_to(@request.preferred_currency)
		  		rows[4+index] << "=#{Axlsx::cell_r(2, 7 + index )}*#{Axlsx::cell_r(rows[4+index].count - 1, 7 + index)}"
		  	end
		end
	  end

	  # Item total, Difference, Difference percentage
	  rows[rows.count] = ["Item Total #{@request.preferred_currency}", '', '', '']
	  rows[rows.count] = ["Difference", '', '', '']
	  rows[rows.count] = ["Difference %", '', '', '']

	  @bids.each do |supplier, bids|
	  	bids.each_with_index do |bid, i|
	  		rows[rows.count-3] << ''
	  		rows[rows.count-3] << "=SUM(#{Axlsx::cell_r(rows[rows.count-3].count, 7 )}:#{Axlsx::cell_r(rows[rows.count-3].count, 6 + @request.items.count)})"
	  		rows[rows.count-2] << ''
	  		rows[rows.count-2] << "=#{Axlsx::cell_r(rows[rows.count-2].count, rows.count)}-MIN(#{Axlsx::cell_r(5, rows.count)}:#{Axlsx::cell_r(3 + @total_bids.count*2, rows.count)})"
	  		rows[rows.count-1] << ''
	  		rows[rows.count-1] << "=((#{Axlsx::cell_r(rows[rows.count-1].count, rows.count)}-MIN(#{Axlsx::cell_r(5, rows.count)}:#{Axlsx::cell_r(3 + @total_bids.count*2, rows.count)}))/#{Axlsx::cell_r(rows[rows.count-1].count, rows.count)})"	  			  		
	  	end
	  end

	  # Add some styles to cells
	  rows.each do |row|
	  	sheet.add_row row, :height => 40
	  end

	  sheet.rows.each_with_index do |row, index|
	  	row.cells.each do |cell|
	  		cell.style = default
	  		cell.style = gray_cell if (0..2).include? index
	  		cell.style = dark_cell if index == 6
	  		cell.style = script if index == 4
	  		cell.style = bidder if index == 3
	  		cell.style = percent if row == sheet.rows.last
	  		cell.style = dark_cell if ((sheet.rows.count-3)..(sheet.rows.count-2)).include? index
	  	end
	  end

	  sheet.column_widths 30, 50, nil

	end

	wb.add_worksheet(name: "Answers to questionnaire") do |sheet|
		# Sheet protection
	  sheet.sheet_protection do |protection|
	  	protection.password = 'coolplum'
	  end

	  # Request Details 
	  (0..2).each do |i|
	  	sheet.merge_cells Axlsx::cell_r(0, i) + ':' + Axlsx::cell_r(1, i)
	  end
	   
	  sheet.add_row [ " Buyer: #{@request.user.name}, #{@request.company.name}" ], :height => 30
	  sheet.add_row [ " Request: ##{@request.id} #{@request.name}" ], :height => 30
	  sheet.add_row [ " Bid due date: #{@request.end_time.strftime("%b %d, %Y %H:%M ( %Z%z )")}" ], :height => 30

	  rows 		= []
	  rows[0] 	= ['Bidder:']
	  rows[1] 	= ['Comments']
	  rows[2] 	= ['']	

	  # Bidder, Comments, Origianl/Alternative
	  @bids.each do |supplier, bids|
	  	start_point = rows[0].count
		end_point 	= rows[0].count + bids.count - 1
		sheet.merge_cells Axlsx::cell_r(start_point, 3) + ':' + Axlsx::cell_r(end_point, 3)
		bids.each_with_index do |bid, index|			  	
		  	rows[0] << "#{bid.supplier.company.name} - #{bid.supplier.correct_user.name} (#{bid.supplier.email})"
			rows[1] << bid.content
	  		if index == 0
	  			rows[2] << 'Original'
	  		else
	  			rows[2] << "Alternative bid#{index}"
	  		end
	  	end	  	
	  end

	  # Questions and answers
	  @request.questions.each_with_index do |question, index|
	  	rows[3+index*2] = [" #{index+1}. #{question.title} ( #{question.description} ) "]
	  	sheet.merge_cells Axlsx::cell_r(0, 6+index*2) + ':' + Axlsx::cell_r(@total_bids.count, 6+index*2)
		rows[4+index*2] = [""]
	  	@bids.each do |supplier, bids|
		  	bids.each do |bid|			  	
		  		rows[4+index*2] << "#{bid.qanswers[index].answer}  #{bid.qanswers[index].attach}"
		  	end	  	
		end
	  end

	  # Add some styles to cells
	  rows.each do |row|
	  	sheet.add_row row, :height => 40
	  end

	  sheet.rows.each_with_index do |row, index|
	  	row.cells.each do |cell|
	  		cell.style = default
	  		cell.style = gray_cell if (0..2).include? index
	  		cell.style = script if index == 4
	  		cell.style = bidder if index == 3
	  		cell.style = gray_cell if index > 5 and (index%2) == 0
	  	end
	  end

	  sheet.column_widths 30

	end

	wb.add_worksheet(name: "Invited participants") do |sheet|
	
	  # Request Details 
	  (0..2).each do |i|
	  	sheet.merge_cells Axlsx::cell_r(0, i) + ':' + Axlsx::cell_r(1, i)
	  end
	   
	  sheet.add_row [ " Buyer: #{@request.user.name}, #{@request.company.name}" ], :height => 30
	  sheet.add_row [ " Request: ##{@request.id} #{@request.name}" ], :height => 30
	  sheet.add_row [ " Bid due date: #{@request.end_time.strftime("%b %d, %Y %H:%M ( %Z%z )")}" ], :height => 30

	  	
	  unless @request.winner.nil?
	  	sheet.add_row [ 'WINNER', '', '', '', '' ], :height => 40
	  	sheet.rows.last.cells.first.style = dark_cell
	  	sheet.merge_cells sheet.rows.last.cells[(0..4)]
	  	sheet.add_row [ 
          	@request.winner.company.name, 
          	@request.winner.correct_user.name, 
          	@request.winner.email,
          	"#{@request.winner.bids.where(request_id: @request.id).count} bids",
          	"#{@request.bids.where(status: 'win').first.bid_budget} #{@request.bids.where(status: 'win').first.bid_currency}",
          	@request.bids.where(status: 'win').first.created_at.strftime("%b %d, %Y %H:%M ( %Z%z )") 
          ], :height => 30
      end

      sheet.add_row [ 'Bids Made', '', '', '', '' ], :height => 40
      sheet.rows.last.cells.first.style = dark_cell
      sheet.merge_cells sheet.rows.last.cells[(0..4)]
      @suppliers.each do |supplier|
      	if supplier.bids.where(request_id: @request.id).exists?
	      	sheet.add_row [ 
	          	supplier.company.name, 
	          	supplier.correct_user.name, 
	          	supplier.email,
	          	"#{supplier.bids.where(request_id: @request.id).count} bid(s)",
	          	supplier.bids.where(request_id: @request.id).first.created_at.strftime("%b %d, %Y %H:%M ( %Z%z )") 
	          ], :height => 30
	    end
      end

      sheet.add_row [ 'Wants To Bid', '', '', '', '' ], :height => 40
      sheet.rows.last.cells.first.style = dark_cell
      sheet.merge_cells sheet.rows.last.cells[(0..4)]
      @suppliers.each do |supplier|
      	sheet.add_row [ 
          	supplier.company.name, 
          	supplier.correct_user.name, 
          	supplier.email,
          	supplier.created_at.strftime("%b %d, %Y %H:%M ( %Z%z )") 
          ], :height => 30
      end

	  sheet.rows.each_with_index do |row, index|
	  	row.cells.each do |cell|
	  		cell.style = default if cell.style != dark_cell
	  		cell.style = gray_cell if (0..2).include? index
	  	end
	  end

	  sheet.column_widths 30, 30, 30, 30, 30

	end
end